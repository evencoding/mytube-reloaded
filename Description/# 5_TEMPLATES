-----------------------------------------------------------------------------------
# 5.0 Returning HTML
    (1) HTML을 리턴하는 두 가지 옵션이 존재한다
        1. HTML의 문자열을 써서 보내는 방법 (HTML이 상당히 길고 커지기 때문에 좋은 방법이 아니다) 긴급상황에나
        2. Pug를 사용하는 방법이다
-----------------------------------------------------------------------------------
# 5.1 Configuring Pug
    (1) Pug는 템플릿 엔진(Template Engine)이다
    (2) 템플릿을 이용하여 View를 만들 수 있다
        1. npm i pug로 설치한다
        2. pug를 뷰 엔진으로 설정한다
            Express에게 html 헬퍼로 pug를 쓰겠다고 선언한다
            view engine이 pug라는 것
                app.set("view engine", "pug");
        3. 실제로 pug 파일을 생성한다
    (3) 기본적으로 Express는 process.cwd()/views폴더 안에 있는 파일을 찾는다
        따라서 따로 export나 import를 할 필요가 없다
    (4) pug파일을 가져올 때는 res.render("pug파일이름");
    (6) [process.cwd()] current working directory는 node.js를 실행하는 디렉토리다
        즉, 어디서 노드를 부르고 있는지에 따라 달라진다
        views폴더를 옮겨주는 방법도 있겠지만 이번 프로젝트에서는 src폴더안에서 관리할 것이다
    (7) app.set("views", process.cwd() + "/src/views"); 로 views폴더를 찾는 디폴드 값을 바꿔 줄 수 있다
    (8) pug에서 변수나 자바스크립트를 사용하는 방법 #{}
-----------------------------------------------------------------------------------
# 5.2 Partials
    (1) pug의 장점
        1. html을 간략하게 작성할 수 있다
        2. 최고의 장점은 반복할 필요가 없다는 것이다
    (2) views폴더안에 partials 폴더를 만든다
        partials폴더 안에 footer.pug 파일을 만든다
    (3) 다른 pug파일에서 include 해서 사용할 수 있다
        ex) include partials/footer.pug
-----------------------------------------------------------------------------------
# 5.3 Extending Templates
    (1) inheritance(상속)
        1. 일종의 베이스를 만들어준다(레이아웃의 베이스, 혹은 HTML의 베이스)
            모든 파일들이 그 베이스에서부터 확장해 나간다 ex) extends base.pug
    (2) block content
        베이스 파일에 block (blockName)를하면 베이스 파일에 content를 위한 공간이 마련된다
        베이스 파일을 상속한 파일에서 block 의 내용을 지정해줄 수 있다
        ex) block content
                h1 Edit Video
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------