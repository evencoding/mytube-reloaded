tips
JSON.stringify() 는 JS object를 String으로 변환해준다
JSON.parse() 는 String을 JS object로 변환해준다
Status Code 201 은 created(생성됨)이다

-----------------------------------------------------------------------------------
# 16.0 Introduction
-----------------------------------------------------------------------------------
# 16.1 Comment Models
    (1) comment model을 만든다
        댓글은 비디오 안에 달리는 거고, 그 말은 비디오는 많은 댓글을 가질 수 있다
        댓글은 유저가 다는거고, 그 말은 유저는 많은 댓글을 가질 수 있다
    (2) 최초의 파일에 model을 import 해서 Mongoose가 model을 compile하도록 한다
-----------------------------------------------------------------------------------
# 16.2 Comment Box
    (1) 댓글을 작성하는 frontend 부분을 만든다
        assets에 js파일을 만든고 Webpack에 추가해준다
        commnetSection을 사용할 template에서 불러와서 사용한다
    (2) submit 로직을 짠 후, 백엔드로 request 를 보낸다
-----------------------------------------------------------------------------------
# 16.3 API Route part One
    (1) 에러 Fix
    (2) backend에 request 보내기
        fetch() 이용
            JS를 통해서 URL 변경 없이 request를 보낼 수 있게 만들어준다
-----------------------------------------------------------------------------------
# 16.4 API Route part Two
    (1) 현재 프런트엔드에서 fetch()로 body를 보내줬지만 백엔드에서 req.body를 읽을 수 없다
    (2) form의 input정보를 백앤드에서 body로 읽을 수 있었던건 express.urlencoded middleware 덕분이였다
    (3) 서버가 fetch로부터 오는 데이터를 이해할 수 있게 해야한다
        주로 fetch를 통해서 보내는 데이터는 JSON 데이터이다
    (4) 브라우저와 서버는 JS object를 받아서 string으로 만들어 버리기 때문에 object를 보낼 수 없다
        따라서 backend에 object를 보낼 때 오브젝트에 감싸서 보내주지 않는다 (하지만 이 단계에서도 아직 backend에서 데이터를 읽을 수 없다)
    (5) express.text() 미들웨어를 사용한다
        웹사이트에 request로 들어오는 text를 이해하도록 한다
            backend가 text를 받아서 req.body에 넣어준다
    (6) 하지만 text뿐아니라 여러가지 정보를 함께 보내려한다면 어떻게 해야할까?
        오브젝트를 사용해야 할 것이다 (하지만 오브젝트를 String으로 바꿔버림..)
    (7) JSON.stringify라는 것을 한다
        JS object를 받아서 string으로 돌려준다
            이렇게 JS object를 보내줄 수 있다
            하지만 단순한 String이기 때문에 각각의 데이터에 접근할 수 없다
    (8) express는 string을 받아서 json으로 바꿔주는 middleware가 있다
        express.text() 대신 express.json() 미들웨어를 사용한다
    오브젝트를 보내면 String으로 변환되서 백엔드로 가고, 백엔드에서 express.json() 미들웨어가 String을 object로 바꿔준다
        하지만 아직도 body를 읽을 수 없다
    (9) 현재까지의 과정으로 Express는 String을 받아서 json으로 바꾸려고 한다
        하지만 이걸 위해서 Express에게 json을 보내고 있다고 이야기해줘야 한다 (지금은 Express가 유저가 text를 보낸다고 생각하기 때문)
        따라서 request의 content-type을 바꿔줘야 한다
    (10) fetch에서 headers를 추가한다
        header는 기본적으로 request에 대한 정보를 담고 있다
        headers: {
        "Content-Type": "application/json",
        },
-----------------------------------------------------------------------------------
# 16.5 Commenting
    (1) 복습이지만 우리가 backend로 보내는 모든 request는 쿠키와 함께 온다
    (2) 그럼 backend는 쿠키를 가지고 session을 찾아본다
        즉, 그냥 fetch만 하면 브라우저가 작동하는 방식에 의해 쿠키는 자동으로 브라우저에 의해 전송되고, 컨트롤러에서 내가 쓸 수 있다
    (3) backend를 처리한다
        작섣된 comment를 db에 추가한다
-----------------------------------------------------------------------------------
# 16.6 Rendering Comments
-----------------------------------------------------------------------------------
# 16.7 Realtime Comments
-----------------------------------------------------------------------------------
# 16.8 Comment Ids
-----------------------------------------------------------------------------------
# 16.9 Recap and Challenge
-----------------------------------------------------------------------------------