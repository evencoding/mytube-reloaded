-----------------------------------------------------------------------------------
# 13.0 Recorder Setup
    (1) recorder.js 파일을 생성하고 webpack 의 entry에 추가
    (2) upload.pug 파일에서 처리
    (3) MediaDevices.getUserMedia() 를 사용
    (4) 프론트엔드 상에서 async와 await를 쓰려면 regeneratorRuntime을 설치해야한다
        npm i regenerator-runtime
-----------------------------------------------------------------------------------
# 13.1 Video Preview
    (1) src가 없는 video Element를 추가해서 카메라로부터 얻은 stream을 video element에 담는다
    (2) video.srcObject 에 stream 을 넣는다
        srcObject는 video가 가질 수 있는 무언가를 의미한다
            HTML 요소인 src와는 다른것
-----------------------------------------------------------------------------------
# 13.2 Recording Video
    (1) stream 을 녹화해 비디오 미리보기에 넣는다
        MediaRecorder 사용
    (2) Start 버튼을 눌렀을 때 미리보기가 아닌 녹화가 되어야한다
        즉, 미리보기 기능이 먼저 진행되도록 수정
    (3) MediaRecorder 이벤트를 사용
    (4) 녹화가 종료되면 dataavailable event가 발생된다
        그 이벤트를 잡으려면 ondataavailable이란 handler를 사용해야 한다
-----------------------------------------------------------------------------------
# 13.3 Recording Video part Two
    (1) event data에서 얻게되는건 파일이다
    (2) objectUrl 이라는 것을 만든다
        createObjectURL 은 브라우저 메모리에서만 가능한 URL을 만들어 준다
        그리고 URL은 파일을 가르킨다
    (3) Preview를 없애고 녹화한 비디오로 대체한다
    (4) 녹화한 것을 다운로드 할 수 있게 한다
-----------------------------------------------------------------------------------
# 13.4 Downloading the File
    (1) 동영상을 우클릭해서 저장할 수 있지만 사용자가 직접 하도록 만들지 않고 가짜 클릭을 만들어서 한다
        링크를 걸긴하는데 가짜 링크를 거는 것이다
    (2) 비디오 바일을 공유해야 한다
    (3) a 태그의 download 속성
        사용자로 하여금 URL을 통해 어디로 보내주는 게 아니라 URL을 저장하게 해준다
-----------------------------------------------------------------------------------
# 13.5 Recap
    (1) getUserMedia 는 mediaDevices 라는 객체의 function인데,
        midiaDevices는 마이크, 카메라와 같은 미디어 장비들에 접근하게 한다
    (2) stream이라는 건 내가 어딘가에 넣어둘 0과 1로 이루어진 데이터를 의미한다
    (3) ondataavailable 은 녹화가 멈추면 발생되는 event 다
        발생되면 event 데이터를 얻는다
    (4) createObjectURL 은 메모리 상에 있는 파일에 접근할 수 있도록 브라우저가 생성한 것이다
        서버에는 존재하지 않음
-----------------------------------------------------------------------------------
