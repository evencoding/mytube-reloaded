-----------------------------------------------------------------------------------
# 11.0 Player Setup
    (1) 넷플릭스의 비디오 플레이어 같이 만든다
    (2) 비디오 플레이어 코드를 검색 화면에 로드하는 것이 말이되나
        그럴필요 없다
    (3) 따라서 다른 JavaScript 파일을 다른 페이지에 포함시켜준다
    (4) Webpack 파일의 entry 를 오브젝트로 만들어준다
    (5) output 역시 수정한다
        Webpack이 제공하는 기능을 사용한다 (변수)
        filename에 [name]을 써주면 파일 명과 같은 이름으로 output된다
    (6) 이렇게 여러 다른 파일들을 webpack으로 포함시킬 수 있다
    (7) 이제 videoPlayer.js를 비디오 플레이어가 필요한 비디오 페이지에 로드해 줘야 한다
        이번 프로젝트에서는 watch.pug 파일이 그러한데 script 를 넣을 공간이 없다
            그래서 base.pug파일에 scripts라는 block을 추가한다
-----------------------------------------------------------------------------------
# 11.1 Play Pause
    (1) 비디오(자바스크립트)를 만들기 전에 html 마크업을 해줘야 한다
    (2) 플레이어에 필요할 것 같은 모든 html input과 button을 만들어 준다
    (3) html 요소들에 붙인 id들을 JavaScript에 넣어준다
    (4) video를 JavaScript로 가져온다
    (5) EventListener 를 추가한다
    (6) 비디오 element와 오디오 element는 둘다 html media element 로부터 상속을 받는다
        많은 properties를 가지고 있다 (문서 참조)
            paused, play 를 사용해서 재생 정지 기능을 만든다
    (7) video에 eventListener를 추가한다
        pause와 play 이벤트를 이용해서 버튼의 text를 바꿔준다
-----------------------------------------------------------------------------------
# 11.2 Mute and Unmute
    (1) Mute버튼을 구현한다
        muted 속성이용 (boolean)
        상태에 따라 버튼 text도 바꿔준다
    (2) 볼륨 range 와 mute를 연결시켜준다
        Mute 버튼을 누르면 range의 값이 0이되고
        range를 드레그하면 Mute가 풀려야한다
        뮤트상태에서 다시한번 버튼을 누르면 range가 원래 상태로 돌아가게 한다
            range 속성 문서 참조
-----------------------------------------------------------------------------------
# 11.3 Volumn
    (1) range의 기본값을 설정한다
    (2) html과 JavaScript의 video가 똑같은 value를 가지도록 해준다
    (3) range의 움직임을 감지할 수 있어야한다
        change 이벤트 사용할 수 있지만 마우스를 때야만 적용되기에 실시간을 조절하기 힘들다
        input 이벤트를 사용하면 실시간 변경이 가능하다
            event.target.value 로 값을 가져올 수 있다
    (4) 뮤트상태에서 다시한번 버튼을 누르면 range가 원래 상태로 돌아가게 한다
        volumeValue이라는 global variable 을 하나만들어 줘서 range 값이 바뀔때마다 값을 바꿔준다 (원래 volume값을 저장하기 위한 것)
        이제 뮤트를 해체하면 0.5로 돌아가는것이 아닌 volumeValue로 가게 만든다
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
